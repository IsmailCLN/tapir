// cmd/init.go
package cmd

import (
	"fmt"
	"os"
	"path/filepath"
	"time"

	"github.com/spf13/cobra"
)

var (
	initOut   string
	initSuite string
	initForce bool
)

var initCmd = &cobra.Command{
	Use:   "init",
	Short: "Create a starter test suite YAML",
	Long:  "Generates a minimal YAML test suite under test-suites/ (or a custom path).",
	RunE: func(cmd *cobra.Command, args []string) error {
		out := filepath.Clean(initOut)
		if st, err := os.Stat(out); err == nil && st.Mode().IsRegular() && !initForce {
			return fmt.Errorf("file already exists: %s (use --force to overwrite)", out)
		}

		if err := os.MkdirAll(filepath.Dir(out), 0o755); err != nil {
			return fmt.Errorf("failed to create parent directory: %w", err)
		}

		content := buildSampleYAML(initSuite)
		if err := os.WriteFile(out, []byte(content), 0o644); err != nil {
			return fmt.Errorf("failed to write sample yaml: %w", err)
		}

		fmt.Fprintf(cmd.OutOrStdout(), "Initialized sample suite at %s\n", out)
		return nil
	},
}

func buildSampleYAML(suite string) string {
	now := time.Now().Format(time.RFC3339)
	return fmt.Sprintf(`# Generated by tapir init at %s
- suite_name: %s
  requests:
    - name: ping-200
      request:
        method: GET
        url: https://httpbin.org/status/200
      expect:
        - expectation_type: expect_status_code_equals
          kwargs:
            code: 200
    - name: ping-204
      request:
        method: GET
        url: https://httpbin.org/status/204
      expect:
        - expectation_type: expect_status_code_in
          kwargs:
            codes: [200, 201, 204]
`, now, suite)
}
